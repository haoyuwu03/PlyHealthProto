{"ast":null,"code":"var _jsxFileName = \"/Users/cindywu/Documents/PlyHealth/gmail-ai-webapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from 'axios';\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { checkEmails, sendEmail } from './services/api'; // Backend API functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nfunction LoginComponent() {\n  const handleLogin = () => {\n    // Redirect to the Flask /login route\n    window.location.href = 'http://127.0.0.1:5000/login';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogin,\n      className: \"bg-blue-500 text-white p-2 rounded\",\n      children: \"Login with Gmail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = LoginComponent;\nfunction ChatComponent({\n  messages\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container bg-gray-100 p-4 rounded-lg max-w-2xl mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages space-y-4\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${message.role === 'assistant' ? 'bg-blue-100 text-left' : 'bg-green-100 text-right'} p-4 rounded-lg shadow-md`,\n        dangerouslySetInnerHTML: {\n          __html: message.content\n        } // Use innerHTML to render formatted content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ChatComponent;\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userProfile, setUserProfile] = useState({});\n  const [emailSummary, setEmailSummary] = useState('');\n  const [input, setInput] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [senderEmail, setSenderEmail] = useState('');\n  const [emailSubject, setEmailSubject] = useState('');\n\n  // Check for login status\n  useEffect(() => {\n    // Check if user is logged in through backend session\n    axios.get('http://127.0.0.1:5000/check_login').then(response => {\n      console.log('Login status response:', response.data);\n      if (response.data.logged_in) {\n        setIsLoggedIn(true); // Set the user as logged in\n      } else {\n        setIsLoggedIn(false); // Not logged in\n      }\n    }).catch(error => {\n      console.error('Error checking login status:', error);\n    });\n  }, []);\n  const handleCheckEmails = async () => {\n    const emails = await checkEmails(); // Fetch emails from Gmail API via backend\n    setEmailSummary(emails.summary); // Get summarized emails\n    const sender = emails.sender_email;\n    setSenderEmail(sender);\n    const subject = emails.email_subject;\n    setEmailSubject(subject);\n    setMessages(prev => [...prev, {\n      role: 'assistant',\n      content: emails.summary\n    }]);\n  };\n\n  // Function to handle sending the crafted email\n  const handleSendEmail = async () => {\n    if (gptEmail) {\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/send_email', {\n          to: senderEmail,\n          // Send to the extracted sender's email\n          subject: `Re: ${emailSubject}`,\n          // Use the original subject and prepend \"Re:\"\n          body: gptEmail.body\n        });\n        console.log('Email sent:', response.data);\n        setMessages(prevMessages => [...prevMessages, {\n          role: 'assistant',\n          content: 'Email sent successfully!'\n        }]);\n      } catch (error) {\n        console.error('Error sending email:', error);\n        setMessages(prevMessages => [...prevMessages, {\n          role: 'assistant',\n          content: 'Failed to send email.'\n        }]);\n      }\n    }\n  };\n\n  // Function to handle user input submission\n  const handleSendMessage = async () => {\n    // Add the user's message to the chat history\n    setMessages(prevMessages => [...prevMessages, {\n      role: 'user',\n      content: userInput\n    }]);\n\n    // Send the user input and previous messages to the backend to get GPT's response\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/chat', {\n        messages: [...messages, {\n          role: 'user',\n          content: userInput\n        }]\n      });\n      const gptResponse = response.data.message;\n\n      // Add GPT's response to the chat history\n      setMessages(prevMessages => [...prevMessages, {\n        role: 'assistant',\n        content: gptResponse\n      }]);\n    } catch (error) {\n      console.error('Error fetching GPT response:', error);\n    }\n\n    // Clear the input field after sending the message\n    setUserInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(LoginComponent, {\n      onLogin: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ChatComponent, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: userInput,\n          onChange: e => setUserInput(e.target.value),\n          className: \"border p-2 w-full\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          className: \"bg-green-500 text-white p-2 rounded mt-4\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCheckEmails,\n          className: \"bg-blue-500 text-white p-2 rounded\",\n          children: \"Check Emails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendEmail,\n        className: \"bg-green-500 text-white p-2 rounded mt-4\",\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G6wtl5TNHXFkpg65vEACEiMFko8=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginComponent\");\n$RefreshReg$(_c2, \"ChatComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["axios","React","useState","useEffect","checkEmails","sendEmail","jsxDEV","_jsxDEV","defaults","withCredentials","LoginComponent","handleLogin","window","location","href","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","_c","ChatComponent","messages","map","message","index","role","dangerouslySetInnerHTML","__html","content","_c2","App","_s","isLoggedIn","setIsLoggedIn","setMessages","userProfile","setUserProfile","emailSummary","setEmailSummary","input","setInput","userInput","setUserInput","senderEmail","setSenderEmail","emailSubject","setEmailSubject","get","then","response","console","log","data","logged_in","catch","error","handleCheckEmails","emails","summary","sender","sender_email","subject","email_subject","prev","handleSendEmail","gptEmail","post","to","body","prevMessages","handleSendMessage","gptResponse","onLogin","type","value","onChange","e","target","_c3","$RefreshReg$"],"sources":["/Users/cindywu/Documents/PlyHealth/gmail-ai-webapp/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from 'axios';\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { checkEmails, sendEmail} from './services/api'; // Backend API functions\naxios.defaults.withCredentials = true;\n\nfunction LoginComponent() {\n  const handleLogin = () => {\n    // Redirect to the Flask /login route\n    window.location.href = 'http://127.0.0.1:5000/login';\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n      <button onClick={handleLogin} className=\"bg-blue-500 text-white p-2 rounded\">\n        Login with Gmail\n      </button>\n    </div>\n  );\n}\n\nfunction ChatComponent({ messages }) {\n  return (\n    <div className=\"chat-container bg-gray-100 p-4 rounded-lg max-w-2xl mx-auto\">\n      <div className=\"chat-messages space-y-4\">\n        {messages.map((message, index) => (\n          <div\n            key={index}\n            className={`${\n              message.role === 'assistant'\n                ? 'bg-blue-100 text-left'\n                : 'bg-green-100 text-right'\n            } p-4 rounded-lg shadow-md`}\n            dangerouslySetInnerHTML={{ __html: message.content }}  // Use innerHTML to render formatted content\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userProfile, setUserProfile] = useState({});\n  const [emailSummary, setEmailSummary] = useState('');\n  const [input, setInput] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [senderEmail, setSenderEmail] = useState('');\n  const [emailSubject, setEmailSubject] = useState('');\n\n  // Check for login status\n  useEffect(() => {\n    // Check if user is logged in through backend session\n    axios.get('http://127.0.0.1:5000/check_login')\n      .then(response => {\n        console.log('Login status response:', response.data);\n        if (response.data.logged_in) {\n          setIsLoggedIn(true);  // Set the user as logged in\n        } else {\n          setIsLoggedIn(false);  // Not logged in\n        }\n      })\n      .catch(error => {\n        console.error('Error checking login status:', error);\n      });\n  }, []);\n\n  const handleCheckEmails = async () => {\n    const emails = await checkEmails(); // Fetch emails from Gmail API via backend\n    setEmailSummary(emails.summary); // Get summarized emails\n    const sender = emails.sender_email;\n    setSenderEmail(sender);\n    const subject = emails.email_subject;\n    setEmailSubject(subject);\n    setMessages((prev) => [...prev, { role: 'assistant', content: emails.summary }]);\n  };\n\n\n  \n  // Function to handle sending the crafted email\n  const handleSendEmail = async () => {\n    if (gptEmail) {\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/send_email', {\n          to: senderEmail,  // Send to the extracted sender's email\n          subject: `Re: ${emailSubject}`,  // Use the original subject and prepend \"Re:\"\n          body: gptEmail.body,\n        });\n        console.log('Email sent:', response.data);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { role: 'assistant', content: 'Email sent successfully!' }\n        ]);\n      } catch (error) {\n        console.error('Error sending email:', error);\n        setMessages((prevMessages) => [\n          ...prevMessages,\n          { role: 'assistant', content: 'Failed to send email.' }\n        ]);\n      }\n    }\n  };\n\n  // Function to handle user input submission\n  const handleSendMessage = async () => {\n    // Add the user's message to the chat history\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { role: 'user', content: userInput }\n    ]);\n\n    // Send the user input and previous messages to the backend to get GPT's response\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/chat', {\n        messages: [...messages, { role: 'user', content: userInput }],\n      });\n      const gptResponse = response.data.message;\n\n      // Add GPT's response to the chat history\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { role: 'assistant', content: gptResponse }\n      ]);\n\n    } catch (error) {\n      console.error('Error fetching GPT response:', error);\n    }\n\n    // Clear the input field after sending the message\n    setUserInput('');\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      {!isLoggedIn ? (\n        <LoginComponent onLogin={setIsLoggedIn} />\n      ) : (\n        <div>\n          <ChatComponent messages={messages} />\n          <div className=\"my-4\">\n            <input\n              type=\"text\"\n              value={userInput}\n              onChange={(e) => setUserInput(e.target.value)}\n              className=\"border p-2 w-full\"\n            />\n            <button\n              onClick={handleSendMessage}\n              className=\"bg-green-500 text-white p-2 rounded mt-4\"\n            >\n              Send Message\n            </button>\n          </div>\n          <div className=\"my-4\">\n            <button\n              onClick={handleCheckEmails}\n              className=\"bg-blue-500 text-white p-2 rounded\"\n            >\n              Check Emails\n            </button>\n          </div>\n          <button\n            onClick={handleSendEmail}\n            className=\"bg-green-500 text-white p-2 rounded mt-4\"\n          >\n            Send Email\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}