{"ast":null,"code":"var _jsxFileName = \"/Users/cindywu/Documents/PlyHealth/gmail-ai-webapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { checkEmails, sendEmail } from './services/api'; // Backend API functions\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginComponent({\n  onLogin\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onLogin(true),\n      children: \"Login with Gmail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = LoginComponent;\nfunction ChatComponent({\n  messages\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [message.role, \": \", message.content]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c2 = ChatComponent;\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userProfile, setUserProfile] = useState({});\n  const [emailSummary, setEmailSummary] = useState('');\n  const [input, setInput] = useState('');\n\n  // Check for login status\n  useEffect(() => {\n    // Check if user is logged in through backend session\n    // Fetch user profile if logged in\n  }, []);\n  const handleCheckEmails = async () => {\n    const emails = await checkEmails(); // Fetch emails from Gmail API via backend\n    setEmailSummary(emails.summary); // Get summarized emails\n    setMessages(prev => [...prev, {\n      role: 'assistant',\n      content: emails.summary\n    }]);\n  };\n  const handleSendEmail = async () => {\n    const response = await sendEmail(input, userProfile); // Send email through Gmail API\n    setMessages(prev => [...prev, {\n      role: 'user',\n      content: input\n    }]);\n    setMessages(prev => [...prev, {\n      role: 'assistant',\n      content: 'Email sent!'\n    }]);\n    setInput('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-6\",\n    children: !isLoggedIn ? /*#__PURE__*/_jsxDEV(LoginComponent, {\n      onLogin: setIsLoggedIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ChatComponent, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-4\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCheckEmails,\n          className: \"bg-blue-500 text-white p-2 rounded\",\n          children: \"Check Emails\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        className: \"border p-2 w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendEmail,\n        className: \"bg-green-500 text-white p-2 rounded mt-4\",\n        children: \"Send Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SDq8+wLeW/OOBQ8rnJMhuU3FhKA=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"LoginComponent\");\n$RefreshReg$(_c2, \"ChatComponent\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","checkEmails","sendEmail","jsxDEV","_jsxDEV","LoginComponent","onLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","ChatComponent","messages","map","message","index","role","content","_c2","App","_s","isLoggedIn","setIsLoggedIn","setMessages","userProfile","setUserProfile","emailSummary","setEmailSummary","input","setInput","handleCheckEmails","emails","summary","prev","handleSendEmail","response","className","type","value","onChange","e","target","_c3","$RefreshReg$"],"sources":["/Users/cindywu/Documents/PlyHealth/gmail-ai-webapp/frontend/src/App.js"],"sourcesContent":["import './App.css';\n\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { checkEmails, sendEmail} from './services/api'; // Backend API functions\n\nfunction LoginComponent({ onLogin }) {\n  return (\n    <div>\n      <h2>Login</h2>\n      <button onClick={() => onLogin(true)}>Login with Gmail</button>\n    </div>\n  );\n}\n\nfunction ChatComponent({ messages }) {\n  return (\n    <div>\n      <h2>Chat</h2>\n      <div>\n        {messages.map((message, index) => (\n          <p key={index}>{message.role}: {message.content}</p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [userProfile, setUserProfile] = useState({});\n  const [emailSummary, setEmailSummary] = useState('');\n  const [input, setInput] = useState('');\n\n  // Check for login status\n  useEffect(() => {\n    // Check if user is logged in through backend session\n    // Fetch user profile if logged in\n  }, []);\n\n  const handleCheckEmails = async () => {\n    const emails = await checkEmails(); // Fetch emails from Gmail API via backend\n    setEmailSummary(emails.summary); // Get summarized emails\n    setMessages((prev) => [...prev, { role: 'assistant', content: emails.summary }]);\n  };\n\n  const handleSendEmail = async () => {\n    const response = await sendEmail(input, userProfile); // Send email through Gmail API\n    setMessages((prev) => [...prev, { role: 'user', content: input }]);\n    setMessages((prev) => [...prev, { role: 'assistant', content: 'Email sent!' }]);\n    setInput('');\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      {!isLoggedIn ? (\n        <LoginComponent onLogin={setIsLoggedIn} />\n      ) : (\n        <div>\n          <ChatComponent messages={messages} />\n          <div className=\"my-4\">\n            <button\n              onClick={handleCheckEmails}\n              className=\"bg-blue-500 text-white p-2 rounded\"\n            >\n              Check Emails\n            </button>\n          </div>\n          <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            className=\"border p-2 w-full\"\n          />\n          <button\n            onClick={handleSendEmail}\n            className=\"bg-green-500 text-white p-2 rounded mt-4\"\n          >\n            Send Email\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}